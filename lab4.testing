import pytest
import requests
import time
from flask import Flask
from backend import app
from locust import HttpUser, task, between
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys

BASE_URL = "http://127.0.0.1:5000"

# ====== 1. UNIT ТЕСТИ ======
@pytest.fixture
def client():
    app.config["TESTING"] = True
    with app.test_client() as client:
        yield client

def test_login_success(client):
    response = client.post("/login", json={"username": "user1", "password": "password1"})
    assert response.status_code == 200
    assert "token" in response.get_json()

def test_login_fail(client):
    response = client.post("/login", json={"username": "wrong", "password": "wrong"})
    assert response.status_code == 401

# ====== 2. PERFORMANCE ТЕСТ (LOCUST) ======
class WebsiteUser(HttpUser):
    wait_time = between(1, 5)

    @task
    def login_test(self):
        self.client.post("/login", json={"username": "user1", "password": "password1"})

# ====== 3. КОМПЛЕКСНЕ ТЕСТУВАННЯ API ======
def test_full_scenario():
    # 1. Логін
    login_resp = requests.post(f"{BASE_URL}/login", json={"username": "user1", "password": "password1"})
    assert login_resp.status_code == 200
    token = login_resp.json()["token"]

    # 2. Отримання профілю
    profile_resp = requests.get(f"{BASE_URL}/profile", headers={"Authorization": f"Bearer {token}"})
    assert profile_resp.status_code == 200

# ====== 4. SCRAPING (SELENIUM) ======
def test_scraping():
    driver = webdriver.Chrome()  # Використовуй ChromeDriver
    driver.get("http://localhost:3000/login")

    # Авторизація
    username = driver.find_element(By.NAME, "username")
    password = driver.find_element(By.NAME, "password")
    login_button = driver.find_element(By.TAG_NAME, "button")

    username.send_keys("user1")
    password.send_keys("password1")
    login_button.click()

    time.sleep(2)  # Чекаємо завантаження сторінки

    # Отримання інформації з Dashboard
    dashboard_text = driver.find_element(By.TAG_NAME, "h1").text
    print(f"Dashboard: {dashboard_text}")

    driver.quit()

